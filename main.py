import telebot
import datetime
import json

# initialize bot
token_file = open("data/token.txt", 'r')
token = token_file.read()
token_file.close()
bot = telebot.TeleBot(token)

lessons_to_add = dict()

WEEKDAYS = {"–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫" : "monday",
            "–í—Ç–æ—Ä–Ω–∏–∫" : "tuesday",
            "–°—Ä–µ–¥–∞" : "wednesday",
            "–ß–µ—Ç–≤–µ—Ä–≥" : "thursday",
            "–ü—è—Ç–Ω–∏—Ü–∞" : "friday",
            "–°—É–±–±–æ—Ç–∞" : "saturday",
            "–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ" : "sunday"}

@bot.message_handler(commands = ['start'])
def start(message):
    bot.send_message(message.chat.id, "Darova, all work")

@bot.message_handler(commands = ['add_lesson'])
def start_add_lesson(message):
    lessons_to_add[message.from_user.username] = []
    markup = telebot.types.ReplyKeyboardMarkup()
    btn1 = telebot.types.KeyboardButton("–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫")
    btn2 = telebot.types.KeyboardButton("–í—Ç–æ—Ä–Ω–∏–∫")
    markup.row(btn1, btn2)
    btn3 = telebot.types.KeyboardButton("–°—Ä–µ–¥–∞")
    btn4 = telebot.types.KeyboardButton("–ß–µ—Ç–≤–µ—Ä–≥")
    markup.row(btn3, btn4)
    btn5 = telebot.types.KeyboardButton("–ü—è—Ç–Ω–∏—Ü–∞")
    btn6 = telebot.types.KeyboardButton("–°—É–±–±–æ—Ç–∞")
    markup.row(btn5, btn6)
    btn7 = telebot.types.KeyboardButton("–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ???")
    markup.row(btn7)
    bot.send_message(message.chat.id, "–í –∫–∞–∫–æ–π –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏ —É —Ç–µ–±—è –ø–∞—Ä–∞?", reply_markup = markup)
    bot.register_next_step_handler(message, add_weekday)

def add_weekday(message):
    if message.text in WEEKDAYS:
        lessons_to_add[message.from_user.username].append(WEEKDAYS[message.text])
        bot.send_message(message.chat.id, "–í–æ —Å–∫–æ–ª—å–∫–æ —É —Ç–µ–±—è –ø–∞—Ä–∞ ? (–í–≤–µ–¥–∏ –≤ —Ñ–æ—Ä–º–µ—Ç–∞ 08:45)", reply_markup = telebot.types.ReplyKeyboardRemove())
        bot.register_next_step_handler(message, add_time)
    else:
        bot.send_message(message.chat.id, "–ù–µ–≤–µ—Ä–Ω—ã–π –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏, –ø–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑")
        bot.register_next_step_handler(message, add_weekday)

def add_time(message):
    if len(message.text) != 5 or message.text[2] != ':':
        bot.send_message(message.chat.id, "–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç, –ø–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑")
        bot.register_next_step_handler(message, add_time)
    else:
        try:
            hours = int(message.text[:2])
            minutes = int(message.text[3:])
        except:
            bot.send_message(message.chat.id, "–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç, –ø–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑")
            bot.register_next_step_handler(message, add_time)
        lesson_time = datetime.time(hour = hours, minute = minutes)
        lessons_to_add[message.from_user.username].append(lesson_time)
        bot.send_message(message.chat.id, "–ù–∞–ø–∏—à–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–∞—Ä—ã")
        bot.register_next_step_handler(message, add_lesson_name)

def add_lesson_name(message):
    lessons_to_add[message.from_user.username].append(message.text)
    bot.send_message(message.chat.id, "–ù–∞–ø–∏—à–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –∞—É–¥–∏—Ç–æ—Ä–∏—é, –≤ –∫–æ—Ç–æ—Ä–æ–π –ø—Ä–æ–≤–æ–¥–∏—Ç—Å—è –ø–∞—Ä–∞")
    bot.register_next_step_handler(message, add_lesson_place)

def add_lesson_place(message):
    lessons_to_add[message.from_user.username].append(message.text)
    bot.send_message(message.chat.id, f"–¢–≤–æ—è –ø–∞—Ä–∞, –ø–æ–¥ –Ω–∞–∑–≤–∞–Ω–∏–µ–º {lessons_to_add[message.from_user.username][2]}"
                     " –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ –±–∞–∑—É –∏ —Ç–µ–ø–µ—Ä—å —Ç—ã –±—É–¥–µ—à—å –ø–æ–ª—É—á–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–µ–π –∑–∞ 5 –º–∏–Ω—É—Ç –¥–æ –Ω–∞—á–∞–ª–∞ (–Ω–∞ —Å–∞–º–æ–º –¥–µ–ª–µ –Ω–µ –±—É–¥–µ—à—å, –¥–∞–∂–µ –∏—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–≤–æ–µ–π –ø–∞—Ä–µ –ø–æ–∫–∞ –Ω–∏–∫—É–¥–∞ –Ω–µ –¥–æ–±–∞–≤–ª—è–µ—Ç—Å—è, –±–æ—Ç –µ—â—ë –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –Ω–∞ —ç—Ç–∞–ø–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏, —Å–ø–∞—Å–∏–±–æ, —á—Ç–æ –ø–æ–º–æ–≥–∞–µ—à—å –≤ –µ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏)")


@bot.message_handler(commands = ['help'])
def help(message):
    bot.send_message(message.chat.id, "–¢—É—Ç –±—É–∏—Ç –ø–æ–º–æ—â—å")
    print(message)

@bot.message_handler()
def info(message):
    bot.send_message(message.chat.id, "–ù–µ –ø–∏—à–∏—Ç–µ –º–Ω–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∏—á–µ–≥–æ –∫—Ä–æ–º–µ –∫–æ–º–∞–Ω–¥. –Ø –≥–ª—É–ø–µ–Ω—å–∫–∏–π, –æ–±—ã—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—éü•∫. –î–∞ –∏ –Ω–µ –∑–∞ —á–µ–º –º–Ω–µ —ç—Ç–æ."
                     " –î–ª—è –∫–∞–∫–æ–≥–æ-–ª–∏–±–æ —Ñ–∏–¥–±–µ–∫–∞ –ª—É—á—à–µ –Ω–∞–ø–∏—à–∏—Ç–µ –Ω–∞–ø—Ä—è–º—É—é –º–æ–µ–º—É –ø–∞–ø–µ @VEymas")

def get_weekday(weekday):
    return WEEKDAYS[weekday]

def add_lesson(id, lesson, weekday, time, place, data):
    if not (id in data):
        data[id]["sunday"] = []
        data[id]["monday"] = []
        data[id]["tuesday"] = []
        data[id]["wednesday"] = []
        data[id]["thursday"] = []
        data[id]["friday"] = []
        data[id]["saturday"] = []
    data[id][weekday.lower()].append({time : [lesson, place]})




data = json.load(open("data/database.json"))




bot.polling(none_stop = True)